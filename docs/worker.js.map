{"version":3,"file":"worker.js","sourceRoot":"","sources":["../src/client/worker/worker.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-restricted-globals\nconst sw = self as unknown as ServiceWorkerGlobalScope & typeof globalThis;\n\n// Choose a cache name\nconst cacheName = 'fmdj.fr';\n\nconst isDevelopment = sw.location.search.includes('env=development');\n\nconst fetchOrUndefined = async (\n  r: Request,\n): Promise<Response | undefined> => {\n  try {\n    const response = await fetch(r);\n    return response;\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst preCache = async (): Promise<Cache> => {\n  const [cache, resp] = await Promise.all([\n    caches.open(cacheName),\n    fetch('filesToCache.json'),\n  ]);\n\n  if (resp.ok) {\n    const filesToCache = await resp.json();\n    await cache.addAll(filesToCache);\n  }\n\n  return cache;\n};\n\nsw.addEventListener('install', (event: ExtendableEvent) => {\n  event.waitUntil(preCache());\n});\n\nconst updateCache = async (): Promise<number> => {\n  const [cache, updResp] = await Promise.all([\n    caches.open(cacheName),\n    fetch('updatedFiles.json'),\n  ]);\n\n  if (!updResp || !updResp.ok) {\n    return 0;\n  }\n\n  const updClone = updResp.clone();\n\n  // If the \"updatedFiles.json\" file we got from the network\n  // is not newer than the one in the cache, we assume that\n  // all the resources are up to date and skip the update.\n\n  const lastModifiedHeader = updResp.headers.get('Last-Modified');\n  if (lastModifiedHeader) {\n    const lastModified = new Date(lastModifiedHeader).getTime();\n\n    const inCache = await cache.match(new Request('/updatedFiles.json'));\n    if (inCache) {\n      const inCacheLMHeader = inCache.headers.get('Last-Modified');\n\n      if (inCacheLMHeader) {\n        const storedLastModified = new Date(inCacheLMHeader).getTime();\n        if (!(lastModified > storedLastModified)) {\n          return 0;\n        }\n      }\n    }\n  }\n\n  const updatedFiles = await updResp.json();\n  await cache.addAll(updatedFiles);\n  await cache.put(new Request('/updatedFiles.json'), updClone);\n  return updatedFiles.length;\n};\n\nconst replyToUpdateCacheMessage = async (\n  event: ExtendableMessageEvent,\n) => {\n  const nUpdated = await updateCache();\n  if (event.source) {\n    event.source.postMessage({\n      type: 'UPDATE_CACHE_REPLY',\n      nUpdated,\n    }, []);\n  }\n};\n\nsw.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'UPDATE_CACHE') {\n    event.waitUntil(replyToUpdateCacheMessage(event));\n  }\n});\n\nsw.addEventListener('activate', (event) => {\n  event.waitUntil(updateCache());\n});\n\nsw.addEventListener('fetch', (event: FetchEvent) => {\n  if (isDevelopment) {\n    event.respondWith(fetch(event.request));\n    return;\n  }\n\n  const getResponse = async (): Promise<Response> => {\n    const url = new URL(event.request.url);\n    const myURL = sw.location;\n\n    if (event.request.method !== 'GET') {\n      return fetch(event.request);\n    }\n\n    if (url.host !== myURL.host) {\n      return fetch(event.request);\n    }\n\n    const cachedResponse = await caches.match(event.request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n\n    const netResponse = await fetchOrUndefined(event.request);\n\n    if (!netResponse) {\n      return new Response(null, {\n        status: 404,\n        statusText:\n          'Resource not found, nor in cache nor on net.',\n      });\n    }\n\n    // Cache the response if it is valid,\n    // but do it asynchronously in order not\n    // to lose time.\n    if (netResponse.ok) {\n      const clone = netResponse.clone();\n      caches.open(cacheName).then((cache) =>\n        cache.put(event.request, clone))\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(\n            'Failed to cache the response for',\n            event.request.url,\n            error,\n          );\n        });\n    }\n\n    return netResponse;\n  };\n\n  event.respondWith(getResponse());\n});\n"]}