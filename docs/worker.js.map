{"version":3,"file":"worker.js","sourceRoot":"","sources":["../src/client/worker/worker.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst log = (...args: unknown[]) => null;\n\n// eslint-disable-next-line no-restricted-globals\nconst sw = self as unknown as ServiceWorkerGlobalScope & typeof globalThis;\n\n// Choose a cache name\nconst cacheName = 'djfm.github.io-3';\n\nconst isDevelopment = sw.location.search.includes('env=development');\nlog('sw.location.href', sw.location.href, sw.location);\n\nconst fetchOrUndefined = async (\n  r: Request,\n): Promise<Response | undefined> => {\n  try {\n    const response = await fetch(r);\n    return response;\n  } catch (e) {\n    log('Failed to fetch', r.url, e);\n    return undefined;\n  }\n};\n\nconst bestResponse = (network: Response | undefined, cache: Response | undefined): Response => {\n  if (network && network.ok) {\n    return network;\n  }\n\n  if (cache) {\n    return cache;\n  }\n\n  return new Response(null, {\n    status: 404,\n    statusText: 'Resource not found, neither on the network nor in the application cache.',\n  });\n};\n\n// When the service worker is installing,\n// open the cache and add the pre-cache resources to it\n// this is probably useless and doesn't work\nsw.addEventListener('install', (event) => {\n  log('####::::  installing ServiceWorker with', { cacheName });\n  event.waitUntil(async (): Promise<Cache> => {\n    const cache = await caches.open(cacheName);\n    const filesToCacheResponse = await fetch('filesToCache.json');\n    if (filesToCacheResponse.ok) {\n      const filesToCache = await filesToCacheResponse.json();\n      await cache.addAll(filesToCache);\n      return cache;\n    }\n    return cache;\n  });\n});\n\nsw.addEventListener('activate', () => {\n  log('Service worker activate event!');\n  log(\n    'Environment is',\n    isDevelopment ? 'development' : 'production',\n  );\n});\n\nsw.addEventListener('fetch', (event: FetchEvent) => {\n  log('Fetch intercepted for:', event.request.url);\n\n  if (isDevelopment) {\n    log(\n      'Not using the cache since env is set to \"development\".',\n      'ServiceWorker bails.',\n    );\n    event.respondWith(fetch(event.request));\n    return;\n  }\n\n  const getResponse = async (): Promise<Response> => {\n    const url = new URL(event.request.url);\n    const myURL = sw.location;\n    log({ myURL, url });\n\n    if (event.request.method !== 'GET') {\n      return fetch(event.request);\n    }\n\n    if (url.host !== myURL.host) {\n      log('Ignoring caching for host:', url.host);\n      return fetch(event.request);\n    }\n\n    const response = await fetchOrUndefined(event.request);\n\n    if (response && response.ok) {\n      const cache = await caches.open(cacheName);\n      await cache.put(event.request, response.clone());\n      return response;\n    }\n\n    const cachedResponse = await caches.match(event.request);\n    return bestResponse(response, cachedResponse);\n  };\n\n  event.respondWith(getResponse());\n});\n"]}